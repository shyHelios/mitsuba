Import('env', 'sys', 'os')

libhw_objects = [
        'session.cpp', 'device.cpp', 'gputexture.cpp', 'gpugeometry.cpp',
        'gpuprogram.cpp', 'renderer.cpp', 'glrenderer.cpp', 'glprogram.cpp',
        'glgeometry.cpp', 'gltexture.cpp', 'gpusync.cpp', 'glsync.cpp',
        'vpl.cpp', 'font.cpp', 'viewer.cpp', 'basicshader.cpp', 'shadow.cpp']

if sys.platform == 'win32':
        libhw_objects += ['wglsession.cpp',
                'wgldevice.cpp',
                'wglrenderer.cpp']

glEnv = env.Clone()
glEnv.Append(CPPDEFINES = [['MTS_BUILD_MODULE', 'MTS_MODULE_HW']] )
if 'GLLIB' in glEnv:
        glEnv.Prepend(LIBS=glEnv['GLLIB'])
if 'GLLIBDIR' in glEnv:
        glEnv.Prepend(LIBPATH=glEnv['GLLIBDIR'])
if 'GLFLAGS' in glEnv:
        glEnv.Prepend(CPPFLAGS=glEnv['GLFLAGS'])
if 'GLINCLUDE' in glEnv:
        glEnv.Prepend(CPPPATH=glEnv['GLINCLUDE'])

libhw = glEnv.SharedLibrary('mitsuba-hw', libhw_objects)

env.Append(LIBS=['mitsuba-hw'])
env.Append(LIBPATH=[os.path.join(env['BUILDDIR'], 'libhw')])
